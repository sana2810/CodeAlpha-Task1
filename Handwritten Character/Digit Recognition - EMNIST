{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d10a58bf",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-11T16:38:45.864451Z",
     "iopub.status.busy": "2024-01-11T16:38:45.864024Z",
     "iopub.status.idle": "2024-01-11T16:38:55.280357Z",
     "shell.execute_reply": "2024-01-11T16:38:55.279494Z",
     "shell.execute_reply.started": "2024-01-11T16:38:45.864414Z"
    },
    "papermill": {
     "duration": 0.010321,
     "end_time": "2024-01-14T15:18:52.577004",
     "exception": false,
     "start_time": "2024-01-14T15:18:52.566683",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Importing python libraries**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "db1166f3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:18:52.598261Z",
     "iopub.status.busy": "2024-01-14T15:18:52.597612Z",
     "iopub.status.idle": "2024-01-14T15:19:05.630421Z",
     "shell.execute_reply": "2024-01-14T15:19:05.629430Z"
    },
    "papermill": {
     "duration": 13.045921,
     "end_time": "2024-01-14T15:19:05.632832",
     "exception": false,
     "start_time": "2024-01-14T15:18:52.586911",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/scipy/__init__.py:146: UserWarning: A NumPy version >=1.16.5 and <1.23.0 is required for this version of SciPy (detected version 1.24.3\n",
      "  warnings.warn(f\"A NumPy version >={np_minversion} and <{np_maxversion}\"\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from tensorflow.keras import Sequential\n",
    "from tensorflow.keras.layers import Dense\n",
    "from tensorflow.keras.layers import Convolution2D, MaxPooling2D, Flatten\n",
    "from tensorflow.keras.utils import to_categorical"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "95fd984b",
   "metadata": {
    "papermill": {
     "duration": 0.009698,
     "end_time": "2024-01-14T15:19:05.652791",
     "exception": false,
     "start_time": "2024-01-14T15:19:05.643093",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Importing train and test data**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "3d5f2919",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:05.674544Z",
     "iopub.status.busy": "2024-01-14T15:19:05.673580Z",
     "iopub.status.idle": "2024-01-14T15:19:14.390925Z",
     "shell.execute_reply": "2024-01-14T15:19:14.389872Z"
    },
    "papermill": {
     "duration": 8.730927,
     "end_time": "2024-01-14T15:19:14.393821",
     "exception": false,
     "start_time": "2024-01-14T15:19:05.662894",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "train=pd.read_csv('/kaggle/input/emnist/emnist-letters-train.csv')\n",
    "test=pd.read_csv('/kaggle/input/emnist/emnist-letters-test.csv')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "6199015b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:14.419471Z",
     "iopub.status.busy": "2024-01-14T15:19:14.419164Z",
     "iopub.status.idle": "2024-01-14T15:19:14.426072Z",
     "shell.execute_reply": "2024-01-14T15:19:14.425138Z"
    },
    "papermill": {
     "duration": 0.019923,
     "end_time": "2024-01-14T15:19:14.428033",
     "exception": false,
     "start_time": "2024-01-14T15:19:14.408110",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((88799, 785), (14799, 785))"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# shape of train and test files\n",
    "train.shape,test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "4d092759",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:14.449267Z",
     "iopub.status.busy": "2024-01-14T15:19:14.448993Z",
     "iopub.status.idle": "2024-01-14T15:19:14.453652Z",
     "shell.execute_reply": "2024-01-14T15:19:14.452766Z"
    },
    "papermill": {
     "duration": 0.017559,
     "end_time": "2024-01-14T15:19:14.455563",
     "exception": false,
     "start_time": "2024-01-14T15:19:14.438004",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# function to plot images\n",
    "def plot_img(img):\n",
    "    plt.imshow(img.reshape([28,28]))\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d1277a3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:14.477898Z",
     "iopub.status.busy": "2024-01-14T15:19:14.477353Z",
     "iopub.status.idle": "2024-01-14T15:19:14.704169Z",
     "shell.execute_reply": "2024-01-14T15:19:14.703174Z"
    },
    "papermill": {
     "duration": 0.240036,
     "end_time": "2024-01-14T15:19:14.706358",
     "exception": false,
     "start_time": "2024-01-14T15:19:14.466322",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(88799,)\n",
      "(88799, 784)\n"
     ]
    }
   ],
   "source": [
    "#converting into arrays\n",
    "y1 = np.array(train.iloc[:,0].values)\n",
    "x1 = np.array(train.iloc[:,1:].values)\n",
    "y2 = np.array(test.iloc[:,0].values)\n",
    "x2 = np.array(test.iloc[:,1:].values)\n",
    "'''y1 and y2 represent the labels (target variable) for the training and testing datasets, respectively.\n",
    "x1 and x2 represent the features for the training and testing datasets, respectively.'''\n",
    "print(y1.shape)\n",
    "print(x1.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "34947ed9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:14.733731Z",
     "iopub.status.busy": "2024-01-14T15:19:14.732823Z",
     "iopub.status.idle": "2024-01-14T15:19:14.991501Z",
     "shell.execute_reply": "2024-01-14T15:19:14.990449Z"
    },
    "papermill": {
     "duration": 0.274724,
     "end_time": "2024-01-14T15:19:14.993511",
     "exception": false,
     "start_time": "2024-01-14T15:19:14.718787",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_img(x1[10].reshape([28,28]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "16573935",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:15.016242Z",
     "iopub.status.busy": "2024-01-14T15:19:15.015952Z",
     "iopub.status.idle": "2024-01-14T15:19:15.024973Z",
     "shell.execute_reply": "2024-01-14T15:19:15.023959Z"
    },
    "papermill": {
     "duration": 0.02254,
     "end_time": "2024-01-14T15:19:15.027011",
     "exception": false,
     "start_time": "2024-01-14T15:19:15.004471",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([  0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   4,   4,   2,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   4,   4,   9,  37,  37,  37,  37,  37,  37,  51, 114,\n",
       "       127,  77,   7,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         4,  21,  37,  51, 114, 127, 140, 215, 217, 217, 217, 217, 217,\n",
       "       222, 245, 250, 200,  32,   0,   0,   0,   0,   0,   0,   7,  32,\n",
       "        37,  51, 115, 172, 217, 222, 245, 250, 250, 254, 254, 254, 254,\n",
       "       254, 254, 254, 255, 253, 158,  20,   0,   0,   0,   0,   0,  20,\n",
       "       158, 243, 250, 250, 249, 233, 215, 172, 129, 127, 127, 127, 127,\n",
       "       129, 148, 177, 253, 246, 177, 115,   8,   0,   0,   0,   0,   0,\n",
       "         0,  48, 215, 245, 217, 204, 139,  82,  37,  21,   5,   4,   4,\n",
       "         4,  10,  51, 163, 223, 220, 158,  36,   4,   0,   0,   0,   0,\n",
       "         0,   0,   1,  50, 120, 114,  39,  32,   9,   2,   0,   0,   0,\n",
       "         0,   0,   4,  47, 194, 242, 218,  52,  20,   1,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   2,   4,   4,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   8, 115, 176, 213, 139,  77,   1,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   8,  79, 175, 219, 127,  33,   1,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   9,  91, 217, 229,  91,  10,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   8,  91, 216, 217,  95,   7,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,  77, 216, 189,  80,   9,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0, 125, 247, 180,  55,\n",
       "        37,  37,  37,  21,   5,   4,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  77, 206,\n",
       "       246, 250, 250, 250, 249, 233, 218, 215, 127,  51,  32,   7,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         7,  47, 159, 227, 226, 249, 250, 250, 250, 253, 246, 222, 202,\n",
       "        95,   8,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   1,  22,  68,  62, 125, 127, 127, 140, 209, 250,\n",
       "       254, 253, 232, 126,  32,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   1,   1,   4,   4,   4,   9,\n",
       "        46, 139, 204, 233, 251, 242, 131,  22,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   9,  34,  84, 175, 253, 232, 109,   4,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,  16, 227, 249, 125,   4,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,  46, 246, 232,\n",
       "        82,   2,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,  23, 132,\n",
       "       245, 159,  22,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,  35,\n",
       "       159, 233, 175,  36,   1,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   1,  20,\n",
       "        96, 218, 244, 195,  22,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "        19, 149, 229, 219, 128,  45,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,  18, 106, 125,  77,  10,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   4,   4,   2,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,   0,\n",
       "         0,   0,   0,   0])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x1[10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "364589c1",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:15.051348Z",
     "iopub.status.busy": "2024-01-14T15:19:15.050693Z",
     "iopub.status.idle": "2024-01-14T15:19:15.287828Z",
     "shell.execute_reply": "2024-01-14T15:19:15.286866Z"
    },
    "papermill": {
     "duration": 0.251578,
     "end_time": "2024-01-14T15:19:15.290131",
     "exception": false,
     "start_time": "2024-01-14T15:19:15.038553",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_img(x1[100])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "eb064849",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:15.313851Z",
     "iopub.status.busy": "2024-01-14T15:19:15.313250Z",
     "iopub.status.idle": "2024-01-14T15:19:15.320412Z",
     "shell.execute_reply": "2024-01-14T15:19:15.319476Z"
    },
    "papermill": {
     "duration": 0.021109,
     "end_time": "2024-01-14T15:19:15.322430",
     "exception": false,
     "start_time": "2024-01-14T15:19:15.301321",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "14"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y1[10]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "992a6c3b",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:15.345491Z",
     "iopub.status.busy": "2024-01-14T15:19:15.345149Z",
     "iopub.status.idle": "2024-01-14T15:19:16.115250Z",
     "shell.execute_reply": "2024-01-14T15:19:16.114426Z"
    },
    "papermill": {
     "duration": 0.784241,
     "end_time": "2024-01-14T15:19:16.117610",
     "exception": false,
     "start_time": "2024-01-14T15:19:15.333369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# splitting the data\n",
    "x_train,x_test,y_train,y_test=train_test_split(x1,y1,test_size=0.2,random_state=42)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "5d3ad95d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:16.140955Z",
     "iopub.status.busy": "2024-01-14T15:19:16.140632Z",
     "iopub.status.idle": "2024-01-14T15:19:16.146545Z",
     "shell.execute_reply": "2024-01-14T15:19:16.145797Z"
    },
    "papermill": {
     "duration": 0.019466,
     "end_time": "2024-01-14T15:19:16.148440",
     "exception": false,
     "start_time": "2024-01-14T15:19:16.128974",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((71039, 784), (71039,), (17760, 784), (17760,))"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.shape,y_train.shape,x_test.shape,y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "0340bff5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:16.172192Z",
     "iopub.status.busy": "2024-01-14T15:19:16.171924Z",
     "iopub.status.idle": "2024-01-14T15:19:16.395936Z",
     "shell.execute_reply": "2024-01-14T15:19:16.395098Z"
    },
    "papermill": {
     "duration": 0.238133,
     "end_time": "2024-01-14T15:19:16.397983",
     "exception": false,
     "start_time": "2024-01-14T15:19:16.159850",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_img(x_test[1000])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "930d153c",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:16.421498Z",
     "iopub.status.busy": "2024-01-14T15:19:16.421240Z",
     "iopub.status.idle": "2024-01-14T15:19:16.426784Z",
     "shell.execute_reply": "2024-01-14T15:19:16.425882Z"
    },
    "papermill": {
     "duration": 0.019314,
     "end_time": "2024-01-14T15:19:16.428564",
     "exception": false,
     "start_time": "2024-01-14T15:19:16.409250",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "17"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_test[1000]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b8eec9a6",
   "metadata": {
    "papermill": {
     "duration": 0.010996,
     "end_time": "2024-01-14T15:19:16.450831",
     "exception": false,
     "start_time": "2024-01-14T15:19:16.439835",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Model building and testing**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "2effcc32",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:16.474779Z",
     "iopub.status.busy": "2024-01-14T15:19:16.474436Z",
     "iopub.status.idle": "2024-01-14T15:19:16.478270Z",
     "shell.execute_reply": "2024-01-14T15:19:16.477479Z"
    },
    "papermill": {
     "duration": 0.017761,
     "end_time": "2024-01-14T15:19:16.480113",
     "exception": false,
     "start_time": "2024-01-14T15:19:16.462352",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# LOGISRTIC REGRESSION\n",
    "lr=LogisticRegression()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "8aa5a748",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:16.504027Z",
     "iopub.status.busy": "2024-01-14T15:19:16.503681Z",
     "iopub.status.idle": "2024-01-14T15:19:57.142160Z",
     "shell.execute_reply": "2024-01-14T15:19:57.140915Z"
    },
    "papermill": {
     "duration": 40.695277,
     "end_time": "2024-01-14T15:19:57.186666",
     "exception": false,
     "start_time": "2024-01-14T15:19:16.491389",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/sklearn/linear_model/_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):\n",
      "STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.\n",
      "\n",
      "Increase the number of iterations (max_iter) or scale the data as shown in:\n",
      "    https://scikit-learn.org/stable/modules/preprocessing.html\n",
      "Please also refer to the documentation for alternative solver options:\n",
      "    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression\n",
      "  n_iter_i = _check_optimize_result(\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LogisticRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LogisticRegression</label><div class=\"sk-toggleable__content\"><pre>LogisticRegression()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "LogisticRegression()"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "b696ee0e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:57.303890Z",
     "iopub.status.busy": "2024-01-14T15:19:57.303509Z",
     "iopub.status.idle": "2024-01-14T15:19:57.602480Z",
     "shell.execute_reply": "2024-01-14T15:19:57.601422Z"
    },
    "papermill": {
     "duration": 0.367295,
     "end_time": "2024-01-14T15:19:57.605978",
     "exception": false,
     "start_time": "2024-01-14T15:19:57.238683",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7312602936415209"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "f4bc9f26",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:57.664571Z",
     "iopub.status.busy": "2024-01-14T15:19:57.663947Z",
     "iopub.status.idle": "2024-01-14T15:19:57.762725Z",
     "shell.execute_reply": "2024-01-14T15:19:57.761614Z"
    },
    "papermill": {
     "duration": 0.132018,
     "end_time": "2024-01-14T15:19:57.766822",
     "exception": false,
     "start_time": "2024-01-14T15:19:57.634804",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.7009572072072072"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "lr.score(x_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c0f31bd3",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:57.829175Z",
     "iopub.status.busy": "2024-01-14T15:19:57.828556Z",
     "iopub.status.idle": "2024-01-14T15:19:59.814600Z",
     "shell.execute_reply": "2024-01-14T15:19:59.813736Z"
    },
    "papermill": {
     "duration": 2.019915,
     "end_time": "2024-01-14T15:19:59.816810",
     "exception": false,
     "start_time": "2024-01-14T15:19:57.796895",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for i in range(1,10):\n",
    "    plt.figure(figsize=(4,4))\n",
    "    plot_img(x_train[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "14cfb496",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:59.847220Z",
     "iopub.status.busy": "2024-01-14T15:19:59.846901Z",
     "iopub.status.idle": "2024-01-14T15:19:59.851937Z",
     "shell.execute_reply": "2024-01-14T15:19:59.851044Z"
    },
    "papermill": {
     "duration": 0.02228,
     "end_time": "2024-01-14T15:19:59.853810",
     "exception": false,
     "start_time": "2024-01-14T15:19:59.831530",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24\n",
      "1\n",
      "2\n",
      "8\n",
      "5\n",
      "22\n",
      "1\n",
      "16\n",
      "14\n"
     ]
    }
   ],
   "source": [
    "for i in range(1,10):\n",
    "    print(y_train[i])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "59d64410",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:59.884094Z",
     "iopub.status.busy": "2024-01-14T15:19:59.883342Z",
     "iopub.status.idle": "2024-01-14T15:19:59.887329Z",
     "shell.execute_reply": "2024-01-14T15:19:59.886495Z"
    },
    "papermill": {
     "duration": 0.020945,
     "end_time": "2024-01-14T15:19:59.889288",
     "exception": false,
     "start_time": "2024-01-14T15:19:59.868343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "# KNN\n",
    "knn=KNeighborsClassifier()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "0dd7918e",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:59.918505Z",
     "iopub.status.busy": "2024-01-14T15:19:59.918255Z",
     "iopub.status.idle": "2024-01-14T15:19:59.931373Z",
     "shell.execute_reply": "2024-01-14T15:19:59.930540Z"
    },
    "papermill": {
     "duration": 0.030235,
     "end_time": "2024-01-14T15:19:59.933600",
     "exception": false,
     "start_time": "2024-01-14T15:19:59.903365",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>KNeighborsClassifier()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">KNeighborsClassifier</label><div class=\"sk-toggleable__content\"><pre>KNeighborsClassifier()</pre></div></div></div></div></div>"
      ],
      "text/plain": [
       "KNeighborsClassifier()"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn.fit(x_train,y_train)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "41385b68",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:19:59.965041Z",
     "iopub.status.busy": "2024-01-14T15:19:59.964778Z",
     "iopub.status.idle": "2024-01-14T15:20:42.548479Z",
     "shell.execute_reply": "2024-01-14T15:20:42.547478Z"
    },
    "papermill": {
     "duration": 42.617764,
     "end_time": "2024-01-14T15:20:42.567080",
     "exception": false,
     "start_time": "2024-01-14T15:19:59.949316",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.84634009009009"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn.score(x_test,y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "fadffbb6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:20:42.598438Z",
     "iopub.status.busy": "2024-01-14T15:20:42.598133Z",
     "iopub.status.idle": "2024-01-14T15:23:30.711594Z",
     "shell.execute_reply": "2024-01-14T15:23:30.710391Z"
    },
    "papermill": {
     "duration": 168.148078,
     "end_time": "2024-01-14T15:23:30.730076",
     "exception": false,
     "start_time": "2024-01-14T15:20:42.581998",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8942834217824012"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "knn.score(x_train,y_train)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "596b8f73",
   "metadata": {
    "papermill": {
     "duration": 0.014468,
     "end_time": "2024-01-14T15:23:30.759539",
     "exception": false,
     "start_time": "2024-01-14T15:23:30.745071",
     "status": "completed"
    },
    "tags": []
   },
   "source": [
    "# **Neural Networks**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "889974d6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:30.791273Z",
     "iopub.status.busy": "2024-01-14T15:23:30.790416Z",
     "iopub.status.idle": "2024-01-14T15:23:30.803044Z",
     "shell.execute_reply": "2024-01-14T15:23:30.796171Z"
    },
    "papermill": {
     "duration": 0.03078,
     "end_time": "2024-01-14T15:23:30.805171",
     "exception": false,
     "start_time": "2024-01-14T15:23:30.774391",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(71039, 784)"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_train.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "757a806a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:30.836588Z",
     "iopub.status.busy": "2024-01-14T15:23:30.835802Z",
     "iopub.status.idle": "2024-01-14T15:23:30.840402Z",
     "shell.execute_reply": "2024-01-14T15:23:30.839586Z"
    },
    "papermill": {
     "duration": 0.022172,
     "end_time": "2024-01-14T15:23:30.842276",
     "exception": false,
     "start_time": "2024-01-14T15:23:30.820104",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "x_train_new = x_train.reshape((-1, 28, 28, 1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "4cb7c58d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:30.875093Z",
     "iopub.status.busy": "2024-01-14T15:23:30.874231Z",
     "iopub.status.idle": "2024-01-14T15:23:30.880835Z",
     "shell.execute_reply": "2024-01-14T15:23:30.880012Z"
    },
    "papermill": {
     "duration": 0.025545,
     "end_time": "2024-01-14T15:23:30.882914",
     "exception": false,
     "start_time": "2024-01-14T15:23:30.857369",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(17760, 784)"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "d0af167d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:30.914600Z",
     "iopub.status.busy": "2024-01-14T15:23:30.913816Z",
     "iopub.status.idle": "2024-01-14T15:23:30.922523Z",
     "shell.execute_reply": "2024-01-14T15:23:30.921507Z"
    },
    "papermill": {
     "duration": 0.026887,
     "end_time": "2024-01-14T15:23:30.924606",
     "exception": false,
     "start_time": "2024-01-14T15:23:30.897719",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(17760, 28, 28, 1)"
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "x_test_new=x_test.reshape((-1,28,28,1))\n",
    "x_test_new.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "fee4bdbb",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:30.961649Z",
     "iopub.status.busy": "2024-01-14T15:23:30.960709Z",
     "iopub.status.idle": "2024-01-14T15:23:32.175736Z",
     "shell.execute_reply": "2024-01-14T15:23:32.174971Z"
    },
    "papermill": {
     "duration": 1.238066,
     "end_time": "2024-01-14T15:23:32.177950",
     "exception": false,
     "start_time": "2024-01-14T15:23:30.939884",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model = Sequential()\n",
    "\n",
    "\n",
    "model.add(Convolution2D(64, (3,3), activation='relu', input_shape =(28,28,1) ))\n",
    "model.add(Convolution2D(128, (3,3), activation='relu' ))\n",
    "model.add(MaxPooling2D())\n",
    "model.add(Convolution2D(256, (3,3), activation='relu' ))\n",
    "model.add(Convolution2D(128, (3,3), activation='relu' ))\n",
    "model.add(MaxPooling2D())\n",
    "model.add(Flatten())\n",
    "model.add(Dense(27, activation = 'softmax'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "00c0ce16",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:32.211453Z",
     "iopub.status.busy": "2024-01-14T15:23:32.210966Z",
     "iopub.status.idle": "2024-01-14T15:23:32.240011Z",
     "shell.execute_reply": "2024-01-14T15:23:32.238988Z"
    },
    "papermill": {
     "duration": 0.056343,
     "end_time": "2024-01-14T15:23:32.250686",
     "exception": false,
     "start_time": "2024-01-14T15:23:32.194343",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential\"\n",
      "_________________________________________________________________\n",
      " Layer (type)                Output Shape              Param #   \n",
      "=================================================================\n",
      " conv2d (Conv2D)             (None, 26, 26, 64)        640       \n",
      "                                                                 \n",
      " conv2d_1 (Conv2D)           (None, 24, 24, 128)       73856     \n",
      "                                                                 \n",
      " max_pooling2d (MaxPooling2  (None, 12, 12, 128)       0         \n",
      " D)                                                              \n",
      "                                                                 \n",
      " conv2d_2 (Conv2D)           (None, 10, 10, 256)       295168    \n",
      "                                                                 \n",
      " conv2d_3 (Conv2D)           (None, 8, 8, 128)         295040    \n",
      "                                                                 \n",
      " max_pooling2d_1 (MaxPoolin  (None, 4, 4, 128)         0         \n",
      " g2D)                                                            \n",
      "                                                                 \n",
      " flatten (Flatten)           (None, 2048)              0         \n",
      "                                                                 \n",
      " dense (Dense)               (None, 27)                55323     \n",
      "                                                                 \n",
      "=================================================================\n",
      "Total params: 720027 (2.75 MB)\n",
      "Trainable params: 720027 (2.75 MB)\n",
      "Non-trainable params: 0 (0.00 Byte)\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "3d0c2758",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:32.287175Z",
     "iopub.status.busy": "2024-01-14T15:23:32.286649Z",
     "iopub.status.idle": "2024-01-14T15:23:32.302504Z",
     "shell.execute_reply": "2024-01-14T15:23:32.301671Z"
    },
    "papermill": {
     "duration": 0.036164,
     "end_time": "2024-01-14T15:23:32.304471",
     "exception": false,
     "start_time": "2024-01-14T15:23:32.268307",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "model.compile(loss='categorical_crossentropy',metrics=['accuracy'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "581dcd97",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:32.340665Z",
     "iopub.status.busy": "2024-01-14T15:23:32.340373Z",
     "iopub.status.idle": "2024-01-14T15:23:32.347026Z",
     "shell.execute_reply": "2024-01-14T15:23:32.346142Z"
    },
    "papermill": {
     "duration": 0.027174,
     "end_time": "2024-01-14T15:23:32.349095",
     "exception": false,
     "start_time": "2024-01-14T15:23:32.321921",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": [
    "y_train=to_categorical(y_train)\n",
    "y_test=to_categorical(y_test)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "e2dca919",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:32.386206Z",
     "iopub.status.busy": "2024-01-14T15:23:32.385614Z",
     "iopub.status.idle": "2024-01-14T15:23:32.391231Z",
     "shell.execute_reply": "2024-01-14T15:23:32.390410Z"
    },
    "papermill": {
     "duration": 0.025305,
     "end_time": "2024-01-14T15:23:32.393120",
     "exception": false,
     "start_time": "2024-01-14T15:23:32.367815",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "((71039, 27), (17760, 27))"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y_train.shape,y_test.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "d02846b9",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:23:32.428385Z",
     "iopub.status.busy": "2024-01-14T15:23:32.428142Z",
     "iopub.status.idle": "2024-01-14T15:27:11.543431Z",
     "shell.execute_reply": "2024-01-14T15:27:11.542428Z"
    },
    "papermill": {
     "duration": 219.135207,
     "end_time": "2024-01-14T15:27:11.545461",
     "exception": false,
     "start_time": "2024-01-14T15:23:32.410254",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Epoch 1/25\n",
      "444/444 [==============================] - 13s 20ms/step - loss: 1.0038 - accuracy: 0.8079 - val_loss: 0.2714 - val_accuracy: 0.9126\n",
      "Epoch 2/25\n",
      "444/444 [==============================] - 8s 18ms/step - loss: 0.2394 - accuracy: 0.9222 - val_loss: 0.2236 - val_accuracy: 0.9281\n",
      "Epoch 3/25\n",
      "444/444 [==============================] - 8s 18ms/step - loss: 0.1824 - accuracy: 0.9376 - val_loss: 0.2282 - val_accuracy: 0.9267\n",
      "Epoch 4/25\n",
      "444/444 [==============================] - 8s 19ms/step - loss: 0.1480 - accuracy: 0.9482 - val_loss: 0.2161 - val_accuracy: 0.9366\n",
      "Epoch 5/25\n",
      "444/444 [==============================] - 8s 19ms/step - loss: 0.1207 - accuracy: 0.9558 - val_loss: 0.2231 - val_accuracy: 0.9321\n",
      "Epoch 6/25\n",
      "444/444 [==============================] - 8s 19ms/step - loss: 0.1020 - accuracy: 0.9623 - val_loss: 0.2638 - val_accuracy: 0.9292\n",
      "Epoch 7/25\n",
      "444/444 [==============================] - 8s 19ms/step - loss: 0.0876 - accuracy: 0.9665 - val_loss: 0.2932 - val_accuracy: 0.9300\n",
      "Epoch 8/25\n",
      "444/444 [==============================] - 8s 19ms/step - loss: 0.0772 - accuracy: 0.9699 - val_loss: 0.2800 - val_accuracy: 0.9327\n",
      "Epoch 9/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0661 - accuracy: 0.9736 - val_loss: 0.3094 - val_accuracy: 0.9291\n",
      "Epoch 10/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0601 - accuracy: 0.9759 - val_loss: 0.3626 - val_accuracy: 0.9307\n",
      "Epoch 11/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0557 - accuracy: 0.9781 - val_loss: 0.3845 - val_accuracy: 0.9238\n",
      "Epoch 12/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0501 - accuracy: 0.9796 - val_loss: 0.4262 - val_accuracy: 0.9294\n",
      "Epoch 13/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0496 - accuracy: 0.9808 - val_loss: 0.4853 - val_accuracy: 0.9275\n",
      "Epoch 14/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0461 - accuracy: 0.9828 - val_loss: 0.4884 - val_accuracy: 0.9240\n",
      "Epoch 15/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0445 - accuracy: 0.9839 - val_loss: 0.5617 - val_accuracy: 0.9198\n",
      "Epoch 16/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0417 - accuracy: 0.9853 - val_loss: 0.5647 - val_accuracy: 0.9245\n",
      "Epoch 17/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0398 - accuracy: 0.9862 - val_loss: 0.5864 - val_accuracy: 0.9267\n",
      "Epoch 18/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0411 - accuracy: 0.9868 - val_loss: 0.6636 - val_accuracy: 0.9248\n",
      "Epoch 19/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0367 - accuracy: 0.9881 - val_loss: 0.6649 - val_accuracy: 0.9244\n",
      "Epoch 20/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0384 - accuracy: 0.9877 - val_loss: 0.6682 - val_accuracy: 0.9217\n",
      "Epoch 21/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0365 - accuracy: 0.9887 - val_loss: 0.7704 - val_accuracy: 0.9240\n",
      "Epoch 22/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0359 - accuracy: 0.9896 - val_loss: 0.7397 - val_accuracy: 0.9272\n",
      "Epoch 23/25\n",
      "444/444 [==============================] - 9s 20ms/step - loss: 0.0334 - accuracy: 0.9897 - val_loss: 0.8602 - val_accuracy: 0.9255\n",
      "Epoch 24/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0374 - accuracy: 0.9889 - val_loss: 0.9220 - val_accuracy: 0.9196\n",
      "Epoch 25/25\n",
      "444/444 [==============================] - 9s 19ms/step - loss: 0.0375 - accuracy: 0.9894 - val_loss: 0.8734 - val_accuracy: 0.9235\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.src.callbacks.History at 0x799547ca4760>"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "model.fit(x_train_new,y_train,batch_size=128,epochs=25,validation_split=0.2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "409669e5",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:27:12.263169Z",
     "iopub.status.busy": "2024-01-14T15:27:12.262342Z",
     "iopub.status.idle": "2024-01-14T15:27:14.656713Z",
     "shell.execute_reply": "2024-01-14T15:27:14.655756Z"
    },
    "papermill": {
     "duration": 2.733126,
     "end_time": "2024-01-14T15:27:14.658895",
     "exception": false,
     "start_time": "2024-01-14T15:27:11.925769",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "555/555 [==============================] - 2s 3ms/step - loss: 0.8765 - accuracy: 0.9203\n",
      "test accuracy = 0.9202702641487122\n"
     ]
    }
   ],
   "source": [
    "test_accuracy=model.evaluate(x_test_new,y_test)\n",
    "print('test accuracy =',test_accuracy[1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "f37f1cff",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-01-14T15:27:15.351220Z",
     "iopub.status.busy": "2024-01-14T15:27:15.350841Z",
     "iopub.status.idle": "2024-01-14T15:27:23.927555Z",
     "shell.execute_reply": "2024-01-14T15:27:23.926513Z"
    },
    "papermill": {
     "duration": 8.898025,
     "end_time": "2024-01-14T15:27:23.929746",
     "exception": false,
     "start_time": "2024-01-14T15:27:15.031721",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2220/2220 [==============================] - 8s 3ms/step - loss: 0.2013 - accuracy: 0.9767\n",
      "train accuracy = 0.9767169952392578\n"
     ]
    }
   ],
   "source": [
    "train_accuracy=model.evaluate(x_train_new,y_train)\n",
    "print('train accuracy =',train_accuracy[1] )"
   ]
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "nvidiaTeslaT4",
   "dataSources": [
    {
     "datasetId": 7160,
     "sourceId": 10705,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30626,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 517.856984,
   "end_time": "2024-01-14T15:27:27.022890",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-01-14T15:18:49.165906",
   "version": "2.4.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
